#!/bin/bash

prompt() {
    read -p "$1 [Y/n] " CHOICE
    if [ -z "$CHOICE" ]; then 
        echo 1 
    else
        case "$CHOICE" in 
            y|Y ) echo 1;;
            n|N ) echo 0;;
        esac
    fi
}

OLD_DIR="$HOME/.local/old"
if [ -e "$OLD_DIR" ]; then
    i=1
    while :; do
        CANDIDATE="${OLD_DIR}_${i}"
        if [ ! -e "$CANDIDATE" ]; then
            OLD_DIR="$CANDIDATE"
            break
        fi
        i=$((i+1))
    done
fi

SRC=$(dirname "$0")
DEST=$HOME

echo "Wellcome to interactive installation!"
echo "Conflicting configuration files will be moved to $OLD_DIR"
echo "After installation you can find your previous config files there."
echo "Warning!!! this installation assumes you have all necessary packages."
echo "If you dont have, install them firstly."

if [ $(prompt "Continue?") = 0 ]; then
    exit 1
fi

# Initialize/update submodules (auto walls scripts, nvim theme)
git submodule init
git submodule update --recursive --remote

mkdir -p $OLD_DIR/.config
mkdir -p $OLD_DIR/.local
mkdir -p $DEST/.config # Just in case
mkdir -p $DEST/.local
mkdir -p $DEST/.local/share/applications
mkdir -p $DEST/.local/share/templates

# Step one, install everything from $SRC/.config
echo "Installing .config ..."

for CONFIG_PATH in $SRC/.config/*; do
    NAME=$(basename $CONFIG_PATH)
    
    if [ -e "$DEST/.config/$NAME" ]; then
        mv "$DEST/.config/$NAME" $OLD_DIR/.config
    fi

    cp -r $CONFIG_PATH "$DEST/.config/"
done

# Step two, install everything from $SRC/.local
echo "Installing .local/bin ..."

if [ -e "$DEST/.local/bin" ]; then
    mv "$DEST/.local/bin" $OLD_DIR/.local/bin
fi
cp -r "$SRC/.local/bin" "$DEST/.local/"

# Instead of replacing, just add content of these 
cp "$SRC"/.local/share/applications/* "$DEST"/.local/share/applications
cp "$SRC"/.local/share/templates/* "$DEST"/.local/share/templates


for LOCAL_SHARE_PATH in $SRC/.local/share/*; do
    NAME=$(basename $LOCAL_SHARE_PATH)

    if [ "$NAME" = "applications" ] || [ "$NAME" = "templates" ]; then
        continue
    fi 
    
    if [ -e "$DEST/.local/share/$NAME" ]; then
        mv "$DEST/.local/share/$NAME" $OLD_DIR/.local/share
    fi

    cp -r $LOCAL_SHARE_PATH $DEST/.local/share/
done

# Zshenv
cp $SRC/.zshenv $DEST

# Move wallpapers.
mkdir -p $DEST/media/pictures/
cp -r $SRC/wallpapers $DEST/media/pictures/

# Zen theme
if [ $(prompt "Would you like to install custom zen-browser theme?") = 1 ]; then
    ZEN_DIR=$(find "$DEST/.zen/" -name '*(release)' -type d)

    if [ ! -e "$DEST/.zen" ] || [ -z "$ZEN_DIR" ]; then
        echo "WARNING! Could not find $DEST/.zen, perhaps zen-browser is not installed?"
        echo "You should install the theme manually later."

        cat $SRC/.zen/README.md
    else 
        if [ -d "$ZEN_DIR/chrome" ]; then
            mkdir -p $OLD_DIR/.zen
            mv "$ZEN_DIR/chrome" "$OLD_DIR/.zen"
        fi

        mkdir -p "$ZEN_DIR/chrome"
        cp -r "$SRC/.zen/chrome/"* "$ZEN_DIR/chrome"
    fi
fi

echo "Setting zsh as default shell..."
chsh -s $(which zsh)
